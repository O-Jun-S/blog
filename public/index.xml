<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ojun</title>
    <link>/</link>
    <description>Recent content on Ojun</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 02 Jun 2022 17:09:01 +0900</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>高校生が予算0円でブログを作成した話 【hugo】</title>
      <link>/posts/tech/2022/6_3/started_blog/</link>
      <pubDate>Fri, 03 Jun 2022 12:21:22 +0900</pubDate>
      
      <guid>/posts/tech/2022/6_3/started_blog/</guid>
      <description>今日、高校生である僕、Ojunがブログを予算0円で作成した。
他のブログとの差別化と言えば、WordPressを使わずにneovimでmarkdownをゴリゴリに書いている点だろう。なぜWordPressを使わなかったかというと、レンタルサーバーは面倒かつ、自分の家に物理的なサーバーがないためだ。HTMLとかCSSとか書くのめんどくさいし
この記事では、どのようにブログを立てたのか紹介しようと思う。参考にしてもらえたら幸いだ。
使用技術 静的サイトジェネレータ(SSG)としてhugo frameworkを採用。デプロイにはnetlifyを用いた。どうやらhugo frameworkは爆速らしい。netlifyは基本無料で使えるサービスである。ドメインはfreenomで無料で取り、SSL化まで無料でできてしまった。
環境 Windows10上で、WSLのUbuntuを使用している。
hugoを使って静的webサイトを作成 まず、hugoをインストールする。もちろんパッケージマネージャーは好きなものを使ってよい。僕はaptを使う。
$ sudo apt install hugo 次に、webサイトのひな形を作る。
$ hugo new site (サイト名) によって作成できる。
そして、themeを入れる。hugoには多彩なthemeがあるが、僕はterminalを用いた。 theme一覧はここにある。
$ git init # まだgitリポジトリでないなら実行 $ git submodule add -f https://github.com/panr/hugo-theme-terminal.git themes/terminal 次にconfigを設定する。プロジェクトルートにconfig.tomlファイルがあるだろう。僕はgithubのREADMEを見ながらconfigを設定した。個人個人、選んだthemeが異なるので、それぞれのREADMEやhugoのdocsを見てもらいたい。
ここで、一つ記事を作成してみよう。
$ hugo new posts/first-post.md すると、次のようなファイルが作成される。
--- title: &amp;quot;My First Post&amp;quot; date: 2019-03-26T08:47:11+01:00 draft: true --- ここで、記事を書いてみよう。もちろん書き方はmarkdownである。記事を書いたらdraftをfalseにしてほしい。 次に、markdownからHTMLを作成しよう。以下のコマンド一発でできる。
$ hugo -D 最後に、localhostでサーバーを立ててみよう。これも以下のコマンドでできる。
$ hugo server -D $ hugo server -t terminal (themeが僕と同じterminalの場合のみ。正直違いはよく知らない) すると、localhost:1313にサーバーが立っているはずである。ひとまず、SSGを使ってサイトが建てられた。</description>
      <content>&lt;p&gt;今日、高校生である僕、Ojunがブログを予算0円で作成した。&lt;/p&gt;
&lt;p&gt;他のブログとの差別化と言えば、WordPressを使わずにneovimでmarkdownをゴリゴリに書いている点だろう。なぜWordPressを使わなかったかというと、レンタルサーバーは面倒かつ、自分の家に物理的なサーバーがないためだ。&lt;del&gt;HTMLとかCSSとか書くのめんどくさいし&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;この記事では、どのようにブログを立てたのか紹介しようと思う。参考にしてもらえたら幸いだ。&lt;/p&gt;
&lt;h1 id=&#34;使用技術&#34;&gt;使用技術&lt;/h1&gt;
&lt;p&gt;静的サイトジェネレータ(SSG)として&lt;a href=&#34;https://gohugo.io/&#34;&gt;hugo framework&lt;/a&gt;を採用。デプロイには&lt;a href=&#34;https://app.netlify.com/&#34;&gt;netlify&lt;/a&gt;を用いた。どうやらhugo frameworkは爆速らしい。netlifyは基本無料で使えるサービスである。ドメインはfreenomで無料で取り、SSL化まで無料でできてしまった。&lt;/p&gt;
&lt;h1 id=&#34;環境&#34;&gt;環境&lt;/h1&gt;
&lt;p&gt;Windows10上で、WSLのUbuntuを使用している。&lt;/p&gt;
&lt;h1 id=&#34;hugoを使って静的webサイトを作成&#34;&gt;hugoを使って静的webサイトを作成&lt;/h1&gt;
&lt;p&gt;まず、hugoをインストールする。もちろんパッケージマネージャーは好きなものを使ってよい。僕はaptを使う。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次に、webサイトのひな形を作る。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new site (サイト名)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;によって作成できる。&lt;/p&gt;
&lt;p&gt;そして、themeを入れる。hugoには多彩なthemeがあるが、僕は&lt;a href=&#34;https://github.com/panr/hugo-theme-terminal&#34;&gt;terminal&lt;/a&gt;を用いた。
theme一覧は&lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;ここ&lt;/a&gt;にある。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git init # まだgitリポジトリでないなら実行
$ git submodule add -f https://github.com/panr/hugo-theme-terminal.git themes/terminal
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次にconfigを設定する。プロジェクトルートにconfig.tomlファイルがあるだろう。僕はgithubのREADMEを見ながらconfigを設定した。個人個人、選んだthemeが異なるので、それぞれのREADMEやhugoのdocsを見てもらいたい。&lt;/p&gt;
&lt;p&gt;ここで、一つ記事を作成してみよう。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new posts/first-post.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;すると、次のようなファイルが作成される。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;My First Post&amp;quot;
date: 2019-03-26T08:47:11+01:00
draft: true
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ここで、記事を書いてみよう。もちろん書き方は&lt;a href=&#34;http://www.markdown.jp/what-is-markdown/&#34;&gt;markdown&lt;/a&gt;である。記事を書いたらdraftをfalseにしてほしい。
次に、markdownからHTMLを作成しよう。以下のコマンド一発でできる。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo -D
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最後に、localhostでサーバーを立ててみよう。これも以下のコマンドでできる。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server -D
$ hugo server -t terminal (themeが僕と同じterminalの場合のみ。正直違いはよく知らない)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;すると、localhost:1313にサーバーが立っているはずである。ひとまず、SSGを使ってサイトが建てられた。&lt;/p&gt;
&lt;h1 id=&#34;netlifyにデプロイ&#34;&gt;netlifyにデプロイ&lt;/h1&gt;
&lt;p&gt;まず、&lt;a href=&#34;https://app.netlify.com/&#34;&gt;netlify&lt;/a&gt;に登録した。正直、githubリポジトリを登録するだけで簡単にデプロイできるので、説明はあまり要らないだろう。&lt;/p&gt;
&lt;h1 id=&#34;ドメイン取得&#34;&gt;ドメイン取得&lt;/h1&gt;
&lt;p&gt;ドメインは&lt;a href=&#34;https://www.freenom.com/ja/index.html?lang=ja&#34;&gt;freenom&lt;/a&gt;で無料で取得した。freenomは日本語が怪しいが、今まで特に障害はなかった。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>/showcase/</link>
      <pubDate>Thu, 02 Jun 2022 17:09:01 +0900</pubDate>
      
      <guid>/showcase/</guid>
      <description>Coming soon&amp;hellip; </description>
      <content>&lt;h1 id=&#34;coming-soon&#34;&gt;Coming soon&amp;hellip;&lt;/h1&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 02 Jun 2022 14:55:47 +0900</pubDate>
      
      <guid>/about/</guid>
      <description>自己紹介 Ojun(おじゅん)と言います。日本の高1です。趣味でプログラミングをやったり、競技ディベートをしたりしています。将来、セキュリティエンジニアになるためにCTFなどを勉強中です。
好きなプログラミング言語はPythonです。しかし、C++も競プロで多用します。ちなみに、Atcoder茶色です。
このブログには、詰まったエラーの解決方法だったり、勉強になったことだったり、学校の勉強のことだったり&amp;hellip;なんでも記していきます。初学者の方は参考になる部分があるかもしれません(僕も初学者ですが)。一方、上級者の方は温かい目で見守ってください:)</description>
      <content>&lt;h1 id=&#34;自己紹介&#34;&gt;自己紹介&lt;/h1&gt;
&lt;p&gt;Ojun(おじゅん)と言います。日本の高1です。趣味でプログラミングをやったり、競技ディベートをしたりしています。将来、セキュリティエンジニアになるためにCTFなどを勉強中です。&lt;/p&gt;
&lt;p&gt;好きなプログラミング言語はPythonです。しかし、C++も競プロで多用します。ちなみに、Atcoder茶色です。&lt;/p&gt;
&lt;p&gt;このブログには、詰まったエラーの解決方法だったり、勉強になったことだったり、学校の勉強のことだったり&amp;hellip;なんでも記していきます。初学者の方は参考になる部分があるかもしれません(僕も初学者ですが)。一方、上級者の方は温かい目で見守ってください:)&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
