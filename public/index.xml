<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ojun</title>
    <link>/</link>
    <description>Recent content on Ojun</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 02 Jun 2022 17:09:01 +0900</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ABC255 D</title>
      <link>/posts/tech/2022/6_25/abc255_d/</link>
      <pubDate>Sat, 25 Jun 2022 13:07:04 +0900</pubDate>
      
      <guid>/posts/tech/2022/6_25/abc255_d/</guid>
      <description>問題文 問題のリンク
要するに、数列が与えられて、数列の要素に1を足したり引いたりして、すべての要素をある値($X_i$)にする問題です。 今回はクエリが与えられるので、クエリ分の計算量を削減しなくてはなりません。
解法 愚直に解く方法は、すべての要素をループして$X_i$との差を計算する方法です。 クエリ処理に$O(Q)$、ループに$O(N)$かかるので、全体の計算量は$O(NQ)$となります。 しかし、$1 \leq N,Q \leq 2 \times 10^5$なので、間に合いません。
そこで、$X_i$に対して必要な操作の最小回数を、事前に計算しておく方法を考えます。
そもそも、差とはどのように計算されるのでしょうか。
例えば、$A, B \in \mathbb{R}$の差は$|A - B|$です。$A = 3, B = 2$のとき、差は$|A - B| = 1$となります。
では、ある一つの値と、複数の値との差の合計について考えてみましょう。 具体的には、数列$A = \lbrace 1,2,4,5 \rbrace$と実数$X_i = 3$との差を考えます。
先ほども言いましたが、$|1-3| + |2-3| + \ldots$と計算していては間に合いません。 そこで、$A_0$の時点、$A_1$の時点$\ldots$での和を先に計算しておきます。これを累積和と言います。 累積和の計算には計算量$O(N)$要しますが、最初の一回だけ計算するので、余裕で間に合います。
数列Aの累積和をSとすると、$S = \lbrace 1, 1+2, 1+2+4, 1+2+4+5 \rbrace = \lbrace 1, 3, 7, 12 \rbrace$となります。 ここで、$X_i$と、$A$のそれぞれの要素との差を一気に計算する方法を考えてみましょう。
先ほどの愚直な計算式を思い浮かべると、$|1-3| + |2-3| + |4-3| + |5-3| = 6$となります。 ここで、もし絶対値が外れたらどうなるでしょうか。</description>
      <content>&lt;h2 id=&#34;問題文&#34;&gt;問題文&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc255/tasks/abc255_d&#34;&gt;問題のリンク&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要するに、数列が与えられて、数列の要素に1を足したり引いたりして、すべての要素をある値($X_i$)にする問題です。
今回はクエリが与えられるので、クエリ分の計算量を削減しなくてはなりません。&lt;/p&gt;
&lt;h2 id=&#34;解法&#34;&gt;解法&lt;/h2&gt;
&lt;p&gt;愚直に解く方法は、すべての要素をループして$X_i$との差を計算する方法です。
クエリ処理に$O(Q)$、ループに$O(N)$かかるので、全体の計算量は$O(NQ)$となります。
しかし、$1 \leq N,Q \leq 2 \times 10^5$なので、間に合いません。&lt;/p&gt;
&lt;p&gt;そこで、$X_i$に対して必要な操作の最小回数を、事前に計算しておく方法を考えます。&lt;/p&gt;
&lt;p&gt;そもそも、差とはどのように計算されるのでしょうか。&lt;br&gt;
例えば、$A, B \in \mathbb{R}$の差は$|A - B|$です。$A = 3, B = 2$のとき、差は$|A - B| = 1$となります。&lt;/p&gt;
&lt;p&gt;では、ある一つの値と、複数の値との差の合計について考えてみましょう。
具体的には、数列$A = \lbrace 1,2,4,5 \rbrace$と実数$X_i = 3$との差を考えます。&lt;/p&gt;
&lt;p&gt;先ほども言いましたが、$|1-3| + |2-3| + \ldots$と計算していては間に合いません。
そこで、$A_0$の時点、$A_1$の時点$\ldots$での和を先に計算しておきます。これを累積和と言います。
累積和の計算には計算量$O(N)$要しますが、最初の一回だけ計算するので、余裕で間に合います。&lt;/p&gt;
&lt;p&gt;数列Aの累積和をSとすると、$S = \lbrace 1, 1+2, 1+2+4, 1+2+4+5 \rbrace = \lbrace 1, 3, 7, 12 \rbrace$となります。
ここで、$X_i$と、$A$のそれぞれの要素との差を一気に計算する方法を考えてみましょう。&lt;/p&gt;
&lt;p&gt;先ほどの愚直な計算式を思い浮かべると、$|1-3| + |2-3| + |4-3| + |5-3| = 6$となります。
ここで、もし絶対値が外れたらどうなるでしょうか。&lt;/p&gt;
&lt;p&gt;$(3-1) + (3-2) + (4-3) + (5-3) = 6$ となりますね。ここで、計算量を減らすにはどうすれば良いでしょうか。&lt;/p&gt;
&lt;p&gt;3という数が多数登場するので、分配法則でくくることができます。そうすると式は、
$$
\lbrace 3 \times 2 - (1 + 2) \rbrace + \lbrace (4 + 5) - 3 \times 2 \rbrace = 6
$$
となります。
ここで、$1 + 2 = S_1, 4 + 5 = S_3 - S_2, 3=X_i$より、式は、
$$
(X_i \times 2 - S_1) + \lbrace (S_3 - S_2) - X_i \times 2 \rbrace
$$
となります。つまりどういうことでしょうか。&lt;/p&gt;
&lt;p&gt;先ほどの式は、大きく左半分と右半分に分かれます。つまり、Aにおいて$X_i$より小さい部分に関するものと、$X_i$以上の部分に関するものです。
なぜ左半分と右半分に分けなければいけないのか。なぜなら、絶対値を外しているので、$X_i$より小さい$A_i$との差は$X_i - A_i$、逆に$X_i$より大きい$A_i$との差は$A_i - X_1$となるからです。&lt;/p&gt;
&lt;p&gt;数列Aで、「どこから$A_i$が$X_i$以上になるか」を考えれば、左右別々に答えを一気に計算できるということです。&lt;/p&gt;
&lt;p&gt;しかし、「どこから$A_i$が$X_i$以上になるか」を計算するのにも、愚直にやれば$O(N)$かかってしまいます。すなわち、全体では$O(NQ)$かかってしまい、タイムオーバー。&lt;/p&gt;
&lt;p&gt;そこで、数列Aをソートして二分探索を行えば、$O(log{N})$で計算ができます。つまり、全体でも$O(Qlog{N})$で計算でき、余裕を持って間に合います。(厳密に言えばソートに$O(Nlog{N})$かかるので、全体では$O((N+Q)log{N})$です。)&lt;/p&gt;
&lt;p&gt;二分探索を初めて聞いた方は検索してみてください。おそらく一番簡単なアルゴリズムです。&lt;/p&gt;
&lt;p&gt;僕が提出したコードは以下です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#75715e&#34;&gt;#define rep(i, n) for(int i=0; i &amp;lt; (n); i++)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; ll &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt;;
 
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;) {
    ll n, q; cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; q;
    vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ll&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; a(n);
    rep(i, n) cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; a[i];
    sort(a.begin(), a.end());
 
    vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ll&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ps(n, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
    rep(i, n) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
            ps[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[i];
        }
 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
            ps[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ps[i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
        }
    }
 
    rep(i, q) {
        ll xi; cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; xi;
 
        ll lb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lower_bound(a.begin(), a.end(), xi) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; a.begin();
 
        ll ans;
 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(lb &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xi&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;lb&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ps[lb&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (ps[n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; ps[lb&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; xi &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; lb &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(lb &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; n) ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xi &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; ps[n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; ans &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ps[n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; xi;
 
        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ans &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>高校生が予算0円でブログを作成した話 【hugo】</title>
      <link>/posts/tech/2022/6_3/started_blog/</link>
      <pubDate>Fri, 03 Jun 2022 12:21:22 +0900</pubDate>
      
      <guid>/posts/tech/2022/6_3/started_blog/</guid>
      <description>はじめに 今日、高校生の僕(Ojun)がブログを予算0円で作成した。
他のブログとの差別化と言えば、WordPressを使わずにneovimでmarkdownをゴリゴリに書いている点だろう。なぜWordPressを使わなかったかというと、レンタルサーバーは面倒かつ、自分の家に物理的なサーバーがないためだ。HTMLとかCSSとか書くのめんどくさいし
この記事では、どのようにブログを立てたのか紹介しようと思う。参考にしてもらえたら幸いだ。
使用技術 静的サイトジェネレータ(SSG)としてhugo frameworkを採用。デプロイにはnetlifyを用いた。どうやらhugo frameworkは爆速らしい。netlifyは基本無料で使えるサービスである。ドメインはfreenomで無料で取り、SSL化まで無料でできてしまった。
環境 Windows10上で、WSLのUbuntuを使用している。
hugoを使って静的webサイトを作成 まず、hugoをインストールする。もちろんパッケージマネージャーは好きなものを使ってよい。僕はaptを使う。
sudo apt install hugo 次に、webサイトのひな形を作る。
hugo new site (サイト名) によって作成できる。
そして、themeを入れる。hugoには多彩なthemeがあるが、僕はterminalを用いた。 theme一覧はここにある。
git init # まだgitリポジトリでないなら実行 git submodule add -f https://github.com/panr/hugo-theme-terminal.git themes/terminal 次にconfigを設定する。プロジェクトルートにconfig.tomlファイルがあるだろう。僕はgithubのREADMEを見ながらconfigを設定した。個人個人、選んだthemeが異なるので、それぞれのREADMEやhugoのdocsを見てもらいたい。
ここで、一つ記事を作成してみよう。
hugo new posts/first-post.md すると、次のようなファイルが作成される。
--- title: &amp;#34;My First Post&amp;#34; date: 2019-03-26T08:47:11+01:00 draft: true --- ここで、記事を書いてみよう。もちろん書き方はmarkdownである。記事を書いたらdraftをfalseにしてほしい。 次に、markdownからHTMLを作成しよう。以下のコマンド一発でできる。
hugo -D 最後に、localhostでサーバーを立ててみよう。これも以下のコマンドでできる。
hugo server -D hugo server -t terminal (themeが僕と同じterminalの場合のみ。正直違いはよく知らない) すると、localhost:1313にサーバーが立っているはずである。ひとまず、SSGを使ってサイトが建てられた。
netlifyにデプロイ まず、netlifyに登録した。正直、githubリポジトリを登録するだけで簡単にデプロイできるので、説明はあまり要らないだろう。
ドメイン取得 ドメインはfreenomで無料で取得した。freenomは日本語が怪しいが、今まで特に障害はなかった。</description>
      <content>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;今日、高校生の僕(Ojun)がブログを予算0円で作成した。&lt;/p&gt;
&lt;p&gt;他のブログとの差別化と言えば、WordPressを使わずにneovimでmarkdownをゴリゴリに書いている点だろう。なぜWordPressを使わなかったかというと、レンタルサーバーは面倒かつ、自分の家に物理的なサーバーがないためだ。&lt;del&gt;HTMLとかCSSとか書くのめんどくさいし&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;この記事では、どのようにブログを立てたのか紹介しようと思う。参考にしてもらえたら幸いだ。&lt;/p&gt;
&lt;h2 id=&#34;使用技術&#34;&gt;使用技術&lt;/h2&gt;
&lt;p&gt;静的サイトジェネレータ(SSG)として&lt;a href=&#34;https://gohugo.io/&#34;&gt;hugo framework&lt;/a&gt;を採用。デプロイには&lt;a href=&#34;https://app.netlify.com/&#34;&gt;netlify&lt;/a&gt;を用いた。どうやらhugo frameworkは爆速らしい。netlifyは基本無料で使えるサービスである。ドメインはfreenomで無料で取り、SSL化まで無料でできてしまった。&lt;/p&gt;
&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;
&lt;p&gt;Windows10上で、WSLのUbuntuを使用している。&lt;/p&gt;
&lt;h2 id=&#34;hugoを使って静的webサイトを作成&#34;&gt;hugoを使って静的webサイトを作成&lt;/h2&gt;
&lt;p&gt;まず、hugoをインストールする。もちろんパッケージマネージャーは好きなものを使ってよい。僕はaptを使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、webサイトのひな形を作る。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new site &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;サイト名&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;によって作成できる。&lt;/p&gt;
&lt;p&gt;そして、themeを入れる。hugoには多彩なthemeがあるが、僕は&lt;a href=&#34;https://github.com/panr/hugo-theme-terminal&#34;&gt;terminal&lt;/a&gt;を用いた。
theme一覧は&lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;ここ&lt;/a&gt;にある。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git init &lt;span style=&#34;color:#75715e&#34;&gt;# まだgitリポジトリでないなら実行&lt;/span&gt;
git submodule add -f https://github.com/panr/hugo-theme-terminal.git themes/terminal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次にconfigを設定する。プロジェクトルートにconfig.tomlファイルがあるだろう。僕はgithubのREADMEを見ながらconfigを設定した。個人個人、選んだthemeが異なるので、それぞれのREADMEやhugoのdocsを見てもらいたい。&lt;/p&gt;
&lt;p&gt;ここで、一つ記事を作成してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new posts/first-post.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;すると、次のようなファイルが作成される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;---
title: &amp;#34;My First Post&amp;#34;
date: 2019-03-26T08:47:11+01:00
draft: true
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここで、記事を書いてみよう。もちろん書き方は&lt;a href=&#34;http://www.markdown.jp/what-is-markdown/&#34;&gt;markdown&lt;/a&gt;である。記事を書いたらdraftをfalseにしてほしい。
次に、markdownからHTMLを作成しよう。以下のコマンド一発でできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo -D
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後に、localhostでサーバーを立ててみよう。これも以下のコマンドでできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo server -D
hugo server -t terminal &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;themeが僕と同じterminalの場合のみ。正直違いはよく知らない&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;すると、localhost:1313にサーバーが立っているはずである。ひとまず、SSGを使ってサイトが建てられた。&lt;/p&gt;
&lt;h2 id=&#34;netlifyにデプロイ&#34;&gt;netlifyにデプロイ&lt;/h2&gt;
&lt;p&gt;まず、&lt;a href=&#34;https://app.netlify.com/&#34;&gt;netlify&lt;/a&gt;に登録した。正直、githubリポジトリを登録するだけで簡単にデプロイできるので、説明はあまり要らないだろう。&lt;/p&gt;
&lt;h2 id=&#34;ドメイン取得&#34;&gt;ドメイン取得&lt;/h2&gt;
&lt;p&gt;ドメインは&lt;a href=&#34;https://www.freenom.com/ja/index.html?lang=ja&#34;&gt;freenom&lt;/a&gt;で無料で取得した。freenomは日本語が怪しいが、今まで特に障害はなかった。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>/showcase/</link>
      <pubDate>Thu, 02 Jun 2022 17:09:01 +0900</pubDate>
      
      <guid>/showcase/</guid>
      <description>Coming soon&amp;hellip; </description>
      <content>&lt;h2 id=&#34;coming-soon&#34;&gt;Coming soon&amp;hellip;&lt;/h2&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 02 Jun 2022 14:55:47 +0900</pubDate>
      
      <guid>/about/</guid>
      <description>自己紹介 Ojun(おじゅん)と言います。日本の高1です。趣味でプログラミングをやったり、競技ディベートをしたりしています。将来、セキュリティエンジニアになるためにCTFなどを勉強中です。
好きなプログラミング言語はPythonです。しかし、C++も競プロで多用します。ちなみに、Atcoder茶色です。
このブログには、詰まったエラーの解決方法だったり、勉強になったことだったり、学校の勉強のことだったり&amp;hellip;なんでも記していきます。初学者の方は参考になる部分があるかもしれません(僕も初学者ですが)。一方、上級者の方は温かい目で見守ってください:)</description>
      <content>&lt;h2 id=&#34;自己紹介&#34;&gt;自己紹介&lt;/h2&gt;
&lt;p&gt;Ojun(おじゅん)と言います。日本の高1です。趣味でプログラミングをやったり、競技ディベートをしたりしています。将来、セキュリティエンジニアになるためにCTFなどを勉強中です。&lt;/p&gt;
&lt;p&gt;好きなプログラミング言語はPythonです。しかし、C++も競プロで多用します。ちなみに、Atcoder茶色です。&lt;/p&gt;
&lt;p&gt;このブログには、詰まったエラーの解決方法だったり、勉強になったことだったり、学校の勉強のことだったり&amp;hellip;なんでも記していきます。初学者の方は参考になる部分があるかもしれません(僕も初学者ですが)。一方、上級者の方は温かい目で見守ってください:)&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
